// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SystemRezerwacjiLotow.Infrastruktura;

#nullable disable

namespace SystemRezerwacjiLotow.Infrastruktura.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<string>", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("SystemRezerwacjiLotow.Domain.Models.DzienWylotu", b =>
                {
                    b.Property<string>("DzieWylotuId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Dzien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlightId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DzieWylotuId");

                    b.HasIndex("FlightId");

                    b.ToTable("DniWylotow");

                    b.HasData(
                        new
                        {
                            DzieWylotuId = "fae72a46-a115-40e9-bea5-64b2957a88ce",
                            Dzien = "Poniedziałek",
                            FlightId = "KLM 53599 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "27fd9c68-ba82-4f2e-ac15-a531f3499e72",
                            Dzien = "Czwartek",
                            FlightId = "KLM 53599 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "d3afd974-62a4-4b3f-bdbe-1c8d393a0603",
                            Dzien = "Czwartek",
                            FlightId = "KLM 99254 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "fb4bfc24-bf5f-488b-849b-66733081223e",
                            Dzien = "Piątek",
                            FlightId = "KLM 99254 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "3ad0debf-2d19-4e99-bca6-60760b411a13",
                            Dzien = "Piątek",
                            FlightId = "KLM 88857 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "4a33a206-9343-4532-b8b5-b816aa22226d",
                            Dzien = "Sobota",
                            FlightId = "KLM 88857 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "522fa43f-3153-4b4c-b783-92ba2b02f140",
                            Dzien = "Wtorek",
                            FlightId = "KLM 79187 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "e9d797a8-a033-44c7-99aa-c1ea9d74a1ff",
                            Dzien = "Sobota",
                            FlightId = "KLM 79187 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "ab9f5839-c885-4abf-9717-1265422843a6",
                            Dzien = "Poniedziałek",
                            FlightId = "KLM 55113 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "0b8fb085-893d-499c-89d8-025fea274ad2",
                            Dzien = "Piątek",
                            FlightId = "KLM 55113 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "ce87ae1d-0666-41d1-a896-b8cf277d06fb",
                            Dzien = "Sobota",
                            FlightId = "KLM 41351 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "1b231f02-fa2b-4479-9920-a90989c5a59c",
                            Dzien = "Środa",
                            FlightId = "KLM 41351 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "85c1b333-988b-4e29-b1b1-96f7e3b4d75e",
                            Dzien = "Sobota",
                            FlightId = "KLM 50389 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "c8f1be26-92e1-479f-a8ef-3a4626759d3d",
                            Dzien = "Czwartek",
                            FlightId = "KLM 50389 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "4a4b9370-b100-418f-83e8-c0faee7c8049",
                            Dzien = "Piątek",
                            FlightId = "KLM 54974 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "8cc27acb-d434-4fef-ab60-1faa35804ece",
                            Dzien = "Wtorek",
                            FlightId = "KLM 54974 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "2e9c918d-8e74-4f27-8461-255f419a5ee0",
                            Dzien = "Środa",
                            FlightId = "KLM 72750 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "b25ba05d-4d3e-4879-88c1-f30508a50bb5",
                            Dzien = "Sobota",
                            FlightId = "KLM 72750 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "684ab6d7-e39a-4fa1-9016-b0a27acdc167",
                            Dzien = "Piątek",
                            FlightId = "KLM 84603 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "1991766e-9d55-4eb5-9193-acdf7029b5d8",
                            Dzien = "Poniedziałek",
                            FlightId = "KLM 84603 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "3b5bfcd1-12e7-4d97-bbfe-d918c18c7089",
                            Dzien = "Piątek",
                            FlightId = "KLM 98100 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "c04bd78c-66c8-4757-9545-e813c7ee4e58",
                            Dzien = "Sobota",
                            FlightId = "KLM 98100 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "c0f024de-5c4d-4e35-8d67-c5f3e7556b61",
                            Dzien = "Wtorek",
                            FlightId = "KLM 81832 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "e27a2133-c920-49c3-9825-4216539ef268",
                            Dzien = "Czwartek",
                            FlightId = "KLM 81832 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "b61ba099-42ff-4e3d-bbd9-5fc775189db1",
                            Dzien = "Czwartek",
                            FlightId = "KLM 73784 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "3c537762-400d-4cde-87b1-4c3c1744db6d",
                            Dzien = "Piątek",
                            FlightId = "KLM 73784 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "6cbdd3bc-c081-41e6-b60f-1c1bab8c06f5",
                            Dzien = "Piątek",
                            FlightId = "KLM 43334 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "8a14388c-ade4-489d-a860-91ea62623f87",
                            Dzien = "Piątek",
                            FlightId = "KLM 43334 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "ca0305b0-967e-49af-abc2-2c6488ad64a0",
                            Dzien = "Środa",
                            FlightId = "KLM 13946 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "3f8c45f4-dd88-4936-8ebd-83b1ae83b06f",
                            Dzien = "Sobota",
                            FlightId = "KLM 13946 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "12788435-633e-4c87-ab55-84a644b949c8",
                            Dzien = "Czwartek",
                            FlightId = "KLM 90535 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "6c432ad3-c94b-44f9-9bf4-b69203a6aca2",
                            Dzien = "Poniedziałek",
                            FlightId = "KLM 90535 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "16ff2652-a93e-4fcd-805a-f7bbb417570b",
                            Dzien = "Środa",
                            FlightId = "KLM 60768 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "9d4ea8c9-24e2-4981-9248-7bb895866527",
                            Dzien = "Sobota",
                            FlightId = "KLM 60768 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "bf995364-eba2-43ff-9b35-4359f2edf914",
                            Dzien = "Wtorek",
                            FlightId = "KLM 77214 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "69f986b2-27e6-4097-96fa-0e115b8db587",
                            Dzien = "Środa",
                            FlightId = "KLM 77214 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "63cdf232-1d1e-44a5-935a-4c0138df7721",
                            Dzien = "Środa",
                            FlightId = "KLM 84468 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "3f0267da-ee84-4654-be08-063992d21824",
                            Dzien = "Sobota",
                            FlightId = "KLM 84468 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "63380c81-e187-473d-937e-ea85cde0bebb",
                            Dzien = "Czwartek",
                            FlightId = "KLM 40323 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "7658a761-91c3-4cc5-acdf-d7a89fd21817",
                            Dzien = "Środa",
                            FlightId = "KLM 40323 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "399ae75b-95b5-4b76-82ee-4426d4b41493",
                            Dzien = "Sobota",
                            FlightId = "KLM 43332 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "dbcc8115-d5fb-48b0-b858-d2d8e7fba483",
                            Dzien = "Sobota",
                            FlightId = "KLM 43332 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "b9568a8c-60db-440b-a29e-0b853ce572b7",
                            Dzien = "Wtorek",
                            FlightId = "KLM 90625 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "a6684911-9ad2-4aa8-89ff-ed8b8a2b6085",
                            Dzien = "Poniedziałek",
                            FlightId = "KLM 90625 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "2558ec10-531c-4706-bf37-3818b1829d66",
                            Dzien = "Poniedziałek",
                            FlightId = "KLM 15357 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "1c4668e5-e009-47e0-844a-7bf2fd8a9a72",
                            Dzien = "Sobota",
                            FlightId = "KLM 15357 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "07c18216-0f5a-461b-8c0f-c95500b09762",
                            Dzien = "Czwartek",
                            FlightId = "KLM 50380 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "a66bb424-7c63-42d3-ab1b-8422edcd0d0f",
                            Dzien = "Piątek",
                            FlightId = "KLM 50380 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "26ad54b1-a39f-4297-a726-bc419d66ee16",
                            Dzien = "Środa",
                            FlightId = "KLM 27173 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "53baea35-e8e9-4f03-9018-8bccd57571db",
                            Dzien = "Poniedziałek",
                            FlightId = "KLM 27173 BCA"
                        });
                });

            modelBuilder.Entity("SystemRezerwacjiLotow.Domain.Models.Flight", b =>
                {
                    b.Property<string>("FlightId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DataDodania")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GodzinaWylotu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("TenantId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TrasaDo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrasaOd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FlightId");

                    b.HasIndex("TenantId");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            FlightId = "KLM 53599 BCA",
                            DataDodania = "22.10.2024 04:02:07",
                            GodzinaWylotu = "12:27",
                            Price = 145.0,
                            TenantId = "d4fbdd82-4c81-4f99-83db-37f6e97951d9",
                            TrasaDo = "Afryka",
                            TrasaOd = "Chiny"
                        },
                        new
                        {
                            FlightId = "KLM 99254 BCA",
                            DataDodania = "22.10.2024 04:02:07",
                            GodzinaWylotu = "6:7",
                            Price = 172.0,
                            TenantId = "d4fbdd82-4c81-4f99-83db-37f6e97951d9",
                            TrasaDo = "Londyn",
                            TrasaOd = "Chiny"
                        },
                        new
                        {
                            FlightId = "KLM 88857 BCA",
                            DataDodania = "22.10.2024 04:02:07",
                            GodzinaWylotu = "2:53",
                            Price = 103.0,
                            TenantId = "79f216ae-171a-44e2-961c-65eeaae68f42",
                            TrasaDo = "Afryka",
                            TrasaOd = "Hiszpania"
                        },
                        new
                        {
                            FlightId = "KLM 79187 BCA",
                            DataDodania = "22.10.2024 04:02:07",
                            GodzinaWylotu = "6:51",
                            Price = 124.0,
                            TenantId = "b0c25e86-a029-4c25-9449-65409d7547ed",
                            TrasaDo = "Afryka",
                            TrasaOd = "Chiny"
                        },
                        new
                        {
                            FlightId = "KLM 55113 BCA",
                            DataDodania = "22.10.2024 04:02:07",
                            GodzinaWylotu = "21:32",
                            Price = 184.0,
                            TenantId = "32f1c1ee-54ef-49ed-85a6-2790b7c362dd",
                            TrasaDo = "Afryka",
                            TrasaOd = "Chiny"
                        },
                        new
                        {
                            FlightId = "KLM 41351 BCA",
                            DataDodania = "22.10.2024 04:02:07",
                            GodzinaWylotu = "11:3",
                            Price = 175.0,
                            TenantId = "e9ecc7ac-dd2b-42b3-aab5-389611ab9f9c",
                            TrasaDo = "Londyn",
                            TrasaOd = "Rosja"
                        },
                        new
                        {
                            FlightId = "KLM 50389 BCA",
                            DataDodania = "22.10.2024 04:02:07",
                            GodzinaWylotu = "6:40",
                            Price = 154.0,
                            TenantId = "acff8f55-e5cf-4984-9ef5-fc5c1455e2a3",
                            TrasaDo = "Londyn",
                            TrasaOd = "Rosja"
                        },
                        new
                        {
                            FlightId = "KLM 54974 BCA",
                            DataDodania = "22.10.2024 04:02:07",
                            GodzinaWylotu = "5:42",
                            Price = 126.0,
                            TenantId = "b0c25e86-a029-4c25-9449-65409d7547ed",
                            TrasaDo = "Londyn",
                            TrasaOd = "Rosja"
                        },
                        new
                        {
                            FlightId = "KLM 72750 BCA",
                            DataDodania = "22.10.2024 04:02:07",
                            GodzinaWylotu = "18:40",
                            Price = 159.0,
                            TenantId = "32f1c1ee-54ef-49ed-85a6-2790b7c362dd",
                            TrasaDo = "Afryka",
                            TrasaOd = "Rosja"
                        },
                        new
                        {
                            FlightId = "KLM 84603 BCA",
                            DataDodania = "22.10.2024 04:02:07",
                            GodzinaWylotu = "9:17",
                            Price = 169.0,
                            TenantId = "86d21392-9c66-45d4-957e-941830aafeec",
                            TrasaDo = "USA",
                            TrasaOd = "Hiszpania"
                        },
                        new
                        {
                            FlightId = "KLM 98100 BCA",
                            DataDodania = "22.10.2024 04:02:07",
                            GodzinaWylotu = "13:32",
                            Price = 155.0,
                            TenantId = "86d21392-9c66-45d4-957e-941830aafeec",
                            TrasaDo = "Londyn",
                            TrasaOd = "Horwacja"
                        },
                        new
                        {
                            FlightId = "KLM 81832 BCA",
                            DataDodania = "22.10.2024 04:02:07",
                            GodzinaWylotu = "17:28",
                            Price = 100.0,
                            TenantId = "ea8300de-b6bd-4e41-b50e-4d9134cf31e3",
                            TrasaDo = "Londyn",
                            TrasaOd = "Hiszpania"
                        },
                        new
                        {
                            FlightId = "KLM 73784 BCA",
                            DataDodania = "22.10.2024 04:02:07",
                            GodzinaWylotu = "7:8",
                            Price = 111.0,
                            TenantId = "86d21392-9c66-45d4-957e-941830aafeec",
                            TrasaDo = "Afryka",
                            TrasaOd = "Chiny"
                        },
                        new
                        {
                            FlightId = "KLM 43334 BCA",
                            DataDodania = "22.10.2024 04:02:07",
                            GodzinaWylotu = "22:56",
                            Price = 165.0,
                            TenantId = "79f216ae-171a-44e2-961c-65eeaae68f42",
                            TrasaDo = "Afryka",
                            TrasaOd = "Hiszpania"
                        },
                        new
                        {
                            FlightId = "KLM 13946 BCA",
                            DataDodania = "22.10.2024 04:02:07",
                            GodzinaWylotu = "12:48",
                            Price = 155.0,
                            TenantId = "32f1c1ee-54ef-49ed-85a6-2790b7c362dd",
                            TrasaDo = "Afryka",
                            TrasaOd = "Rosja"
                        },
                        new
                        {
                            FlightId = "KLM 90535 BCA",
                            DataDodania = "22.10.2024 04:02:07",
                            GodzinaWylotu = "10:59",
                            Price = 110.0,
                            TenantId = "b0c25e86-a029-4c25-9449-65409d7547ed",
                            TrasaDo = "USA",
                            TrasaOd = "Rosja"
                        },
                        new
                        {
                            FlightId = "KLM 60768 BCA",
                            DataDodania = "22.10.2024 04:02:07",
                            GodzinaWylotu = "15:47",
                            Price = 149.0,
                            TenantId = "f5e9921a-12dc-479b-822f-04f19e25f99c",
                            TrasaDo = "Afryka",
                            TrasaOd = "Chiny"
                        },
                        new
                        {
                            FlightId = "KLM 77214 BCA",
                            DataDodania = "22.10.2024 04:02:07",
                            GodzinaWylotu = "9:44",
                            Price = 133.0,
                            TenantId = "86d21392-9c66-45d4-957e-941830aafeec",
                            TrasaDo = "Londyn",
                            TrasaOd = "Horwacja"
                        },
                        new
                        {
                            FlightId = "KLM 84468 BCA",
                            DataDodania = "22.10.2024 04:02:07",
                            GodzinaWylotu = "6:9",
                            Price = 169.0,
                            TenantId = "b0c25e86-a029-4c25-9449-65409d7547ed",
                            TrasaDo = "Londyn",
                            TrasaOd = "Chiny"
                        },
                        new
                        {
                            FlightId = "KLM 40323 BCA",
                            DataDodania = "22.10.2024 04:02:07",
                            GodzinaWylotu = "8:59",
                            Price = 147.0,
                            TenantId = "acff8f55-e5cf-4984-9ef5-fc5c1455e2a3",
                            TrasaDo = "Afryka",
                            TrasaOd = "Rosja"
                        },
                        new
                        {
                            FlightId = "KLM 43332 BCA",
                            DataDodania = "22.10.2024 04:02:07",
                            GodzinaWylotu = "5:36",
                            Price = 166.0,
                            TenantId = "cfc9e4bb-17dd-40fa-8fd1-7aad8e101f39",
                            TrasaDo = "Londyn",
                            TrasaOd = "Chiny"
                        },
                        new
                        {
                            FlightId = "KLM 90625 BCA",
                            DataDodania = "22.10.2024 04:02:07",
                            GodzinaWylotu = "10:43",
                            Price = 189.0,
                            TenantId = "32f1c1ee-54ef-49ed-85a6-2790b7c362dd",
                            TrasaDo = "Londyn",
                            TrasaOd = "Horwacja"
                        },
                        new
                        {
                            FlightId = "KLM 15357 BCA",
                            DataDodania = "22.10.2024 04:02:07",
                            GodzinaWylotu = "8:59",
                            Price = 123.0,
                            TenantId = "32f1c1ee-54ef-49ed-85a6-2790b7c362dd",
                            TrasaDo = "Londyn",
                            TrasaOd = "Rosja"
                        },
                        new
                        {
                            FlightId = "KLM 50380 BCA",
                            DataDodania = "22.10.2024 04:02:07",
                            GodzinaWylotu = "20:13",
                            Price = 174.0,
                            TenantId = "f5e9921a-12dc-479b-822f-04f19e25f99c",
                            TrasaDo = "Afryka",
                            TrasaOd = "Chiny"
                        },
                        new
                        {
                            FlightId = "KLM 27173 BCA",
                            DataDodania = "22.10.2024 04:02:07",
                            GodzinaWylotu = "21:55",
                            Price = 193.0,
                            TenantId = "acff8f55-e5cf-4984-9ef5-fc5c1455e2a3",
                            TrasaDo = "Londyn",
                            TrasaOd = "Rosja"
                        });
                });

            modelBuilder.Entity("SystemRezerwacjiLotow.Domain.Models.FlightBuy", b =>
                {
                    b.Property<string>("FlightBuyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DataZakupu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlightId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IloscBiletow")
                        .HasColumnType("int");

                    b.Property<double>("PriceSuma")
                        .HasColumnType("float");

                    b.Property<string>("TenantId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("FlightBuyId");

                    b.HasIndex("FlightId");

                    b.HasIndex("TenantId");

                    b.ToTable("FlightBuys");

                    b.HasData(
                        new
                        {
                            FlightBuyId = "c96e3db6-5a95-4c5a-b5b6-9441511378e7",
                            DataZakupu = "22.10.2024 04:02:07",
                            FlightId = "KLM 73784 BCA",
                            IloscBiletow = 1,
                            PriceSuma = 125.0,
                            TenantId = "cfc9e4bb-17dd-40fa-8fd1-7aad8e101f39"
                        },
                        new
                        {
                            FlightBuyId = "98e35ffa-0e28-4c12-8b1c-597333255f79",
                            DataZakupu = "22.10.2024 04:02:07",
                            FlightId = "KLM 84603 BCA",
                            IloscBiletow = 1,
                            PriceSuma = 125.0,
                            TenantId = "79f216ae-171a-44e2-961c-65eeaae68f42"
                        },
                        new
                        {
                            FlightBuyId = "21ca2fa0-936b-46a4-90a3-e910b28e0733",
                            DataZakupu = "22.10.2024 04:02:07",
                            FlightId = "KLM 41351 BCA",
                            IloscBiletow = 1,
                            PriceSuma = 125.0,
                            TenantId = "79f216ae-171a-44e2-961c-65eeaae68f42"
                        },
                        new
                        {
                            FlightBuyId = "f49f97e9-1da2-49f6-ab71-abdc60681784",
                            DataZakupu = "22.10.2024 04:02:07",
                            FlightId = "KLM 98100 BCA",
                            IloscBiletow = 1,
                            PriceSuma = 125.0,
                            TenantId = "acff8f55-e5cf-4984-9ef5-fc5c1455e2a3"
                        },
                        new
                        {
                            FlightBuyId = "42ed7b91-7643-4c18-9b38-512da25a9a07",
                            DataZakupu = "22.10.2024 04:02:07",
                            FlightId = "KLM 13946 BCA",
                            IloscBiletow = 1,
                            PriceSuma = 125.0,
                            TenantId = "b0c25e86-a029-4c25-9449-65409d7547ed"
                        },
                        new
                        {
                            FlightBuyId = "af5b9f91-0b03-4210-b260-50fe273d7399",
                            DataZakupu = "22.10.2024 04:02:07",
                            FlightId = "KLM 79187 BCA",
                            IloscBiletow = 1,
                            PriceSuma = 125.0,
                            TenantId = "cfc9e4bb-17dd-40fa-8fd1-7aad8e101f39"
                        },
                        new
                        {
                            FlightBuyId = "5886de59-dee7-4b0c-969f-c0bfedaa6287",
                            DataZakupu = "22.10.2024 04:02:07",
                            FlightId = "KLM 53599 BCA",
                            IloscBiletow = 1,
                            PriceSuma = 125.0,
                            TenantId = "f5e9921a-12dc-479b-822f-04f19e25f99c"
                        },
                        new
                        {
                            FlightBuyId = "12bdd68d-eb4b-4ea3-92c4-b58ba8df2e6c",
                            DataZakupu = "22.10.2024 04:02:07",
                            FlightId = "KLM 43332 BCA",
                            IloscBiletow = 1,
                            PriceSuma = 125.0,
                            TenantId = "f5e9921a-12dc-479b-822f-04f19e25f99c"
                        },
                        new
                        {
                            FlightBuyId = "3dfe86f5-f959-4fce-a050-01d6564407ef",
                            DataZakupu = "22.10.2024 04:02:07",
                            FlightId = "KLM 50389 BCA",
                            IloscBiletow = 1,
                            PriceSuma = 125.0,
                            TenantId = "79f216ae-171a-44e2-961c-65eeaae68f42"
                        },
                        new
                        {
                            FlightBuyId = "8caef6f3-c42a-45f0-88db-ea1cae40cb95",
                            DataZakupu = "22.10.2024 04:02:07",
                            FlightId = "KLM 84603 BCA",
                            IloscBiletow = 1,
                            PriceSuma = 125.0,
                            TenantId = "b0c25e86-a029-4c25-9449-65409d7547ed"
                        });
                });

            modelBuilder.Entity("SystemRezerwacjiLotow.Domain.Models.FlightBuyKryteriaZnizki", b =>
                {
                    b.Property<string>("FlightBuyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("KryteriaZnizkiId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("FlightBuyId", "KryteriaZnizkiId");

                    b.HasIndex("KryteriaZnizkiId");

                    b.ToTable("FlightBuysKryteriaZnizkis");

                    b.HasData(
                        new
                        {
                            FlightBuyId = "c96e3db6-5a95-4c5a-b5b6-9441511378e7",
                            KryteriaZnizkiId = "0dcab969-52e4-46f5-9d83-4310020be8cb"
                        },
                        new
                        {
                            FlightBuyId = "21ca2fa0-936b-46a4-90a3-e910b28e0733",
                            KryteriaZnizkiId = "2414cf7d-948d-407c-851c-5195461d84fc"
                        },
                        new
                        {
                            FlightBuyId = "42ed7b91-7643-4c18-9b38-512da25a9a07",
                            KryteriaZnizkiId = "2414cf7d-948d-407c-851c-5195461d84fc"
                        },
                        new
                        {
                            FlightBuyId = "5886de59-dee7-4b0c-969f-c0bfedaa6287",
                            KryteriaZnizkiId = "2414cf7d-948d-407c-851c-5195461d84fc"
                        },
                        new
                        {
                            FlightBuyId = "3dfe86f5-f959-4fce-a050-01d6564407ef",
                            KryteriaZnizkiId = "2414cf7d-948d-407c-851c-5195461d84fc"
                        });
                });

            modelBuilder.Entity("SystemRezerwacjiLotow.Domain.Models.KryteriaZnizki", b =>
                {
                    b.Property<string>("KryteriaZnizkiId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FlightBuyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KryteriaZnizkiId");

                    b.HasIndex("FlightBuyId");

                    b.ToTable("KryteriaZnizek");

                    b.HasData(
                        new
                        {
                            KryteriaZnizkiId = "2414cf7d-948d-407c-851c-5195461d84fc",
                            Name = "Urodziny kupującego"
                        },
                        new
                        {
                            KryteriaZnizkiId = "0dcab969-52e4-46f5-9d83-4310020be8cb",
                            Name = "Lot do Afryki"
                        });
                });

            modelBuilder.Entity("SystemRezerwacjiLotow.Domain.Models.Tenant", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataUrodzenia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Imie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nazwisko")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TenantKind")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "85b8e2b7-0cec-4c0e-a5f3-30c10772242f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2bf465f7-dfd3-4b08-9f07-288158979da6",
                            DataUrodzenia = "22.10.1983 12:12:12",
                            Email = "admin@admin.pl",
                            EmailConfirmed = true,
                            Imie = "Jan",
                            LockoutEnabled = false,
                            Nazwisko = "Kowalski",
                            NormalizedEmail = "ADMIN@ADMIN.PL",
                            NormalizedUserName = "ADMIN@ADMIN.PL",
                            PasswordHash = "AQAAAAIAAYagAAAAEKicrpMlC784mAEPnrEWbqhmF4pEp5HVDZfObVkE4wFBT0dxBGze/dAsLz+cnjtarw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3239ffa3-3474-4fb4-9aaa-ff8fb6d0ada3",
                            TenantKind = 0,
                            TwoFactorEnabled = false,
                            UserName = "admin@admin.pl"
                        },
                        new
                        {
                            Id = "ec27c334-95bd-4048-9aa6-b9edec6fe3f6",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4cbadc74-bdcc-4b3a-b782-8e900de6e344",
                            DataUrodzenia = "22.10.1983 12:12:12",
                            Email = "manager@manager.pl",
                            EmailConfirmed = true,
                            Imie = "Janina",
                            LockoutEnabled = false,
                            Nazwisko = "Kowalska",
                            NormalizedEmail = "MANAGER@MANAGER.PL",
                            NormalizedUserName = "MANAGER@MANAGER.PL",
                            PasswordHash = "AQAAAAIAAYagAAAAEO492as/RxenzInzNTVXubFxmppBXTbopdbFxss72zRjfXocNRXl7lYLSMTN+3uq/w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "bd556c89-f3b7-4510-a640-98a5f297f608",
                            TenantKind = 0,
                            TwoFactorEnabled = false,
                            UserName = "manager@manager.pl"
                        },
                        new
                        {
                            Id = "f5e9921a-12dc-479b-822f-04f19e25f99c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f7389fa0-c5ba-4f29-976d-7d69a29bce5a",
                            DataUrodzenia = "22.10.1983 12:12:12",
                            Email = "ImieNazwisko_0@gmail.com",
                            EmailConfirmed = true,
                            Imie = "Imie_0",
                            LockoutEnabled = false,
                            Nazwisko = "Nazwisko_0",
                            NormalizedEmail = "IMIENAZWISKO_0@GMAIL.COM",
                            NormalizedUserName = "IMIENAZWISKO_0@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEMvwynr3ksHdRaEdFCRcC9Oo3yAQ/8aAT8+JDXU7B0WaIqs4/bDbXtfi17JoMT0I5Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "73a90720-b4c3-42d2-96da-01861c855498",
                            TenantKind = 0,
                            TwoFactorEnabled = false,
                            UserName = "ImieNazwisko_0@gmail.com"
                        },
                        new
                        {
                            Id = "cfc9e4bb-17dd-40fa-8fd1-7aad8e101f39",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6bfd555e-d592-4301-b50d-18412d2d1df7",
                            DataUrodzenia = "22.10.1983 12:12:12",
                            Email = "ImieNazwisko_1@gmail.com",
                            EmailConfirmed = true,
                            Imie = "Imie_1",
                            LockoutEnabled = false,
                            Nazwisko = "Nazwisko_1",
                            NormalizedEmail = "IMIENAZWISKO_1@GMAIL.COM",
                            NormalizedUserName = "IMIENAZWISKO_1@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEKMRccO2Verkfk3RPxARlpQAqt3gsBdwdJ5RMuGKSINMM3CUMVUmXajMF0p+N1zxmw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "757f926c-a3bd-4f61-9b28-0b23906c791e",
                            TenantKind = 0,
                            TwoFactorEnabled = false,
                            UserName = "ImieNazwisko_1@gmail.com"
                        },
                        new
                        {
                            Id = "acff8f55-e5cf-4984-9ef5-fc5c1455e2a3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "186508cf-626a-4cb9-b015-45fe5244d654",
                            DataUrodzenia = "22.10.1983 12:12:12",
                            Email = "ImieNazwisko_2@gmail.com",
                            EmailConfirmed = true,
                            Imie = "Imie_2",
                            LockoutEnabled = false,
                            Nazwisko = "Nazwisko_2",
                            NormalizedEmail = "IMIENAZWISKO_2@GMAIL.COM",
                            NormalizedUserName = "IMIENAZWISKO_2@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEEgbUg24r0I0lJuQAPq2Z0TslW6xQgR5y5Wdxbwr+ULd2Bu7Ka+wytg0qjQJ+mE3nQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9d0bc8d9-f9e9-4144-a2ea-52bd7f0c9cc0",
                            TenantKind = 0,
                            TwoFactorEnabled = false,
                            UserName = "ImieNazwisko_2@gmail.com"
                        },
                        new
                        {
                            Id = "d4fbdd82-4c81-4f99-83db-37f6e97951d9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0ba2f4ed-94d9-4800-ad4f-fe7055fb3b3f",
                            DataUrodzenia = "22.10.1983 12:12:12",
                            Email = "ImieNazwisko_3@gmail.com",
                            EmailConfirmed = true,
                            Imie = "Imie_3",
                            LockoutEnabled = false,
                            Nazwisko = "Nazwisko_3",
                            NormalizedEmail = "IMIENAZWISKO_3@GMAIL.COM",
                            NormalizedUserName = "IMIENAZWISKO_3@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAECBn5FnaRLyrjFn0PTL9tg+6rPvz7KtU00fzx26ngervnnKDFyqjEgiJKrVZZxOhSg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2cb6ed89-91eb-4f30-8333-d2c7cba1eaa9",
                            TenantKind = 0,
                            TwoFactorEnabled = false,
                            UserName = "ImieNazwisko_3@gmail.com"
                        },
                        new
                        {
                            Id = "86d21392-9c66-45d4-957e-941830aafeec",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "82ce31b5-57c7-46b9-96f5-a5c40962c510",
                            DataUrodzenia = "22.10.1983 12:12:12",
                            Email = "ImieNazwisko_4@gmail.com",
                            EmailConfirmed = true,
                            Imie = "Imie_4",
                            LockoutEnabled = false,
                            Nazwisko = "Nazwisko_4",
                            NormalizedEmail = "IMIENAZWISKO_4@GMAIL.COM",
                            NormalizedUserName = "IMIENAZWISKO_4@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAECsAvfHQ4iRircDL9PzckXPfdzZ7cwK6a+F7jcS1WE5c1js434akrHnVkp9SGsceKg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "fa88a45e-7329-4c89-8342-16ca08b71615",
                            TenantKind = 0,
                            TwoFactorEnabled = false,
                            UserName = "ImieNazwisko_4@gmail.com"
                        },
                        new
                        {
                            Id = "b0c25e86-a029-4c25-9449-65409d7547ed",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1ed30eca-a7c9-4fd7-8a42-8c41c4d969ef",
                            DataUrodzenia = "22.10.1983 12:12:12",
                            Email = "ImieNazwisko_5@gmail.com",
                            EmailConfirmed = true,
                            Imie = "Imie_5",
                            LockoutEnabled = false,
                            Nazwisko = "Nazwisko_5",
                            NormalizedEmail = "IMIENAZWISKO_5@GMAIL.COM",
                            NormalizedUserName = "IMIENAZWISKO_5@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEFeSn9lSm3P1/Gu8Jvlp3RRpfpUZSh1whC/U3L6JQ1cI7pKh5WmDxth2k0jlDd9j5Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b4d1c15e-0fdf-4947-9505-6b753cb452aa",
                            TenantKind = 0,
                            TwoFactorEnabled = false,
                            UserName = "ImieNazwisko_5@gmail.com"
                        },
                        new
                        {
                            Id = "e9ecc7ac-dd2b-42b3-aab5-389611ab9f9c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1e0d0a7c-5cbc-4db2-a7e3-21c5bcc459c6",
                            DataUrodzenia = "22.10.1983 12:12:12",
                            Email = "ImieNazwisko_6@gmail.com",
                            EmailConfirmed = true,
                            Imie = "Imie_6",
                            LockoutEnabled = false,
                            Nazwisko = "Nazwisko_6",
                            NormalizedEmail = "IMIENAZWISKO_6@GMAIL.COM",
                            NormalizedUserName = "IMIENAZWISKO_6@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEBCvXaeCdueh4Q1suPTlRFQY5ovZrl8Gy11bpPXFqiZw0Sqqfx0sxOVIbf9FP9Rmmw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "112bace3-7694-4aeb-8372-3ebcbe340aeb",
                            TenantKind = 0,
                            TwoFactorEnabled = false,
                            UserName = "ImieNazwisko_6@gmail.com"
                        },
                        new
                        {
                            Id = "ea8300de-b6bd-4e41-b50e-4d9134cf31e3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1e993dcf-b714-405d-9d0d-a159bddb7139",
                            DataUrodzenia = "22.10.1983 12:12:12",
                            Email = "ImieNazwisko_7@gmail.com",
                            EmailConfirmed = true,
                            Imie = "Imie_7",
                            LockoutEnabled = false,
                            Nazwisko = "Nazwisko_7",
                            NormalizedEmail = "IMIENAZWISKO_7@GMAIL.COM",
                            NormalizedUserName = "IMIENAZWISKO_7@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAENd4AZN3wXW4O/Jzu7UJIt4z6utBKJz0Ua+dfn31q7LTORACOzvJ5l+GsTC2o+GR/Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d2b7a37f-9ee6-4a3a-8b90-ebebd5e6c2d9",
                            TenantKind = 0,
                            TwoFactorEnabled = false,
                            UserName = "ImieNazwisko_7@gmail.com"
                        },
                        new
                        {
                            Id = "79f216ae-171a-44e2-961c-65eeaae68f42",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cd7c426d-a64d-4365-8d8e-c983318dbcc9",
                            DataUrodzenia = "22.10.1983 12:12:12",
                            Email = "ImieNazwisko_8@gmail.com",
                            EmailConfirmed = true,
                            Imie = "Imie_8",
                            LockoutEnabled = false,
                            Nazwisko = "Nazwisko_8",
                            NormalizedEmail = "IMIENAZWISKO_8@GMAIL.COM",
                            NormalizedUserName = "IMIENAZWISKO_8@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAELXGKm5Wgvsgd6gPJu0EWTUtiCFj4bIrC2qkvMLMc+BAMTVbrZLmp7sjoenGGiKulQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7ff676fd-f433-461f-aff5-c255cf3b3354",
                            TenantKind = 0,
                            TwoFactorEnabled = false,
                            UserName = "ImieNazwisko_8@gmail.com"
                        },
                        new
                        {
                            Id = "32f1c1ee-54ef-49ed-85a6-2790b7c362dd",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "58bc973f-9b2a-4764-85c6-94d20875641e",
                            DataUrodzenia = "22.10.1983 12:12:12",
                            Email = "ImieNazwisko_9@gmail.com",
                            EmailConfirmed = true,
                            Imie = "Imie_9",
                            LockoutEnabled = false,
                            Nazwisko = "Nazwisko_9",
                            NormalizedEmail = "IMIENAZWISKO_9@GMAIL.COM",
                            NormalizedUserName = "IMIENAZWISKO_9@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEFZqTNum8NUV5fY8C5qkKvRQVkWa9Bm/Fa+JvAoAo218ziV9uYruEUqZwSP8L4bgwA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d77ea6fd-97aa-416a-9e21-dc479c5c4b1c",
                            TenantKind = 0,
                            TwoFactorEnabled = false,
                            UserName = "ImieNazwisko_9@gmail.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<string>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SystemRezerwacjiLotow.Domain.Models.Tenant", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SystemRezerwacjiLotow.Domain.Models.Tenant", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<string>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemRezerwacjiLotow.Domain.Models.Tenant", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SystemRezerwacjiLotow.Domain.Models.Tenant", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemRezerwacjiLotow.Domain.Models.DzienWylotu", b =>
                {
                    b.HasOne("SystemRezerwacjiLotow.Domain.Models.Flight", "Flight")
                        .WithMany("DniWylotu")
                        .HasForeignKey("FlightId");

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("SystemRezerwacjiLotow.Domain.Models.Flight", b =>
                {
                    b.HasOne("SystemRezerwacjiLotow.Domain.Models.Tenant", "Tenant")
                        .WithMany("Flights")
                        .HasForeignKey("TenantId");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("SystemRezerwacjiLotow.Domain.Models.FlightBuy", b =>
                {
                    b.HasOne("SystemRezerwacjiLotow.Domain.Models.Flight", "Flight")
                        .WithMany("FlightBuys")
                        .HasForeignKey("FlightId");

                    b.HasOne("SystemRezerwacjiLotow.Domain.Models.Tenant", "Tenant")
                        .WithMany("FlightBuys")
                        .HasForeignKey("TenantId");

                    b.Navigation("Flight");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("SystemRezerwacjiLotow.Domain.Models.FlightBuyKryteriaZnizki", b =>
                {
                    b.HasOne("SystemRezerwacjiLotow.Domain.Models.FlightBuy", "FlightBuy")
                        .WithMany("FlightBuysKryteriaZnizkis")
                        .HasForeignKey("FlightBuyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemRezerwacjiLotow.Domain.Models.KryteriaZnizki", "KryteriaZnizki")
                        .WithMany("FlightBuysKryteriaZnizkis")
                        .HasForeignKey("KryteriaZnizkiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FlightBuy");

                    b.Navigation("KryteriaZnizki");
                });

            modelBuilder.Entity("SystemRezerwacjiLotow.Domain.Models.KryteriaZnizki", b =>
                {
                    b.HasOne("SystemRezerwacjiLotow.Domain.Models.FlightBuy", "FlightBuy")
                        .WithMany()
                        .HasForeignKey("FlightBuyId");

                    b.Navigation("FlightBuy");
                });

            modelBuilder.Entity("SystemRezerwacjiLotow.Domain.Models.Flight", b =>
                {
                    b.Navigation("DniWylotu");

                    b.Navigation("FlightBuys");
                });

            modelBuilder.Entity("SystemRezerwacjiLotow.Domain.Models.FlightBuy", b =>
                {
                    b.Navigation("FlightBuysKryteriaZnizkis");
                });

            modelBuilder.Entity("SystemRezerwacjiLotow.Domain.Models.KryteriaZnizki", b =>
                {
                    b.Navigation("FlightBuysKryteriaZnizkis");
                });

            modelBuilder.Entity("SystemRezerwacjiLotow.Domain.Models.Tenant", b =>
                {
                    b.Navigation("FlightBuys");

                    b.Navigation("Flights");
                });
#pragma warning restore 612, 618
        }
    }
}
